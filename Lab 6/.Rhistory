# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize")
# one outlier in medium level (164)
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
View(cuckoo_egg)
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
unique(cuckoo_egg$Host.Species)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species")
View(cuckoo_egg)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", theme(text=element_text(size=10))
)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", theme(text=element_text(size=8))
)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", theme(text=element_text(size=10))
)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", varwidth = TRUE)
# one outlier in medium level (164)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", varwidth = FALSE)
# one outlier in medium level (164)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", varwidth = FALSE)
# one outlier in medium level (164)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize")
# one outlier in medium level (164)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", pars = list(boxwex = 0.8))
# one outlier in medium level (164)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", pars = list(boxwex = 0.5))
# one outlier in medium level (164)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .5)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .75)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .6)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize", cex.axis= .6)
# one outlier in medium level (164)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000 (case numbers)", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize")
# one outlier in medium level (164 cases)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000 (case numbers)", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize")
# one outlier in medium level (164 cases)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .55)
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
plot(maize1)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
# loading maize data
malaria_maize <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/malaria_vs_maize.csv")
malaria_maize$Maize_yield <- as.factor(malaria_maize$Maize_yield)
# unique(malaria_maize$Maize_yield), 3 levels: low, med, high
# plotting data using boxplot
boxplot(malaria_cases_per_10000~Maize_yield, data = malaria_maize, xlab = "Level of Cultivation of Maize", ylab = "Malaria Cases Per 10000 (case numbers)", main = "Boxplot of Malaria Cases vs. Level of Cultivation of Maize")
# one outlier in medium level (164 cases)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .55)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize1)
maize-res = maize1$residuals # retrieving residuals
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
maize_res = maize1$residuals # retrieving residuals
# histogram
hist(maize_res)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
maize_res = maize1$residuals # retrieving residuals
# histogram
hist(maize_res)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize1)
maize_res = maize1$residuals # retrieving residuals
# histogram
hist(maize_res)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
maize_res = maize1$residuals # retrieving residuals
# histogram for maize
hist(maize_res)
# histogram for maize
hist(maize_res)
# qqplot for maize
qqPlot(maize_res)
# histogram for maize
hist(maize_res)
# qqplot for maize
qqPlot(maize_res)
# shapiro wilk test for maize
shapiro.test(maize_res)
# qqplot for maize
qqPlot(maize_res)
# running my ANOVA
maize1 <- aov(malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize1)
maize_res = maize1$residuals # retrieving residuals
# histogram for maize
hist(maize_res)
# shapiro wilk test for maize
shapiro.test(maize_res)
# histogram for maize
hist(maize_res)
# qqplot for maize
qqPlot(maize_res)
# shapiro wilk test for maize
shapiro.test(maize_res)
# running a levene test on maize
leveneTest(malaria_cases_per_10000~Maize_yield, malaria_maize)
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
View(malaria_maize)
# log transforming maize data
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
# residual plots
maize2 <- aov(log_malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize2)
maize_res_2 = maize2$residuals # retrieving residuals
# log transforming maize data
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
# residual plots
maize2 <- aov(log_malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize2)
maize_res_2 = maize2$residuals # retrieving residuals
# shapiro wilk test
shapiro.test(maize_res_2)
# log transforming maize data
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
# residual plots
maize2 <- aov(log_malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2)
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9
# qqplot for maize2 residual
qqPlot(maize_res_2)
# log transforming maize data
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
# residual plots
maize2 <- aov(log_malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(1,1)) # places 2 plots on 1 output view
plot(maize2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2) # normal bell curve shape but does look slightly left skewed
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9494
# qqplot for maize2 residual
qqPlot(maize_res_2)
# log transforming maize data
malaria_maize$log_malaria_cases_per_10000 <- log(malaria_maize$malaria_cases_per_10000 + 1)
# residual plots
maize2 <- aov(log_malaria_cases_per_10000~Maize_yield, data = malaria_maize)
par(mfrow = c(2,2)) # places 2 plots on 1 output view
plot(maize2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2) # normal bell curve shape but does look slightly left skewed
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9494
# qqplot for maize2 residual
qqPlot(maize_res_2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2) # normal bell curve shape but does look slightly left skewed
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9494
# qqplot for maize2 residual
qqPlot(maize_res_2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2) # normal bell curve shape but does look slightly left skewed
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9494
# qqplot for maize2 residual
qqPlot(maize_res_2)
# levene test for maize2
leveneTest(maize_res_2)
maize_res_2 = maize2$residuals # retrieving residuals
# histogram of maize 2 residuals
hist(maize_res_2) # normal bell curve shape but does look slightly left skewed
# shapiro wilk test
shapiro.test(maize_res_2) #p-value = 0.9494
# qqplot for maize2 residual
qqPlot(maize_res_2)
# levene test for maize2
leveneTest(log_malaria_cases_per_10000~Maize_yield, malaria_maize)
# retrieving ANOVA table from maize2 data
summary(maize2)
# loading cuckoo egg size data
cuckoo_egg <- read.csv("~/EEMB 146 Lab Files/Lab 6 Data/cuckooeggs.csv")
cuckoo_egg$Host.Species <- as.factor(cuckoo_egg$Host.Species)
# unique(cuckoo_egg$Host.Species), 6 levels present
# plotting cuckoo data into boxplot
boxplot(Egg.Length~Host.Species, data = cuckoo_egg, xlab = "Host Species", ylab = "Cuckoo Egg Length (cm)", main = "Boxplot of Cuckoo Egg Lengths in Different Host Species", cex.axis= .55)
cuckoo1 <- aov(Egg.Length~Host.Species, data = cuckoo_egg)
# plotting residual plot for cuckoo data\
cuckoo1 <- aov(Egg.Length~Host.Species, data = cuckoo_egg)
par(mfrow = c(2,2))
plot(cuckoo1)
# plotting residual plot for cuckoo data\
cuckoo1 <- aov(Egg.Length~Host.Species, data = cuckoo_egg)
par(mfrow = c(1,1))
plot(cuckoo1)
# retrieving residuals
cuckoo_res = cuckoo1$residuals
# retrieving residuals
cuckoo_res = cuckoo1$residuals
#checking normality
hist(cuckoo_res)
# retrieving residuals
cuckoo_res = cuckoo1$residuals
#checking normality
hist(cuckoo_res) # bell shape curve with no dramatic skew --> signs of normality
qqPlot(cuckoo_res)
# retrieving residuals
cuckoo_res = cuckoo1$residuals
#checking normality
hist(cuckoo_res) # bell shape curve with no dramatic skew --> signs of normality
qqPlot(cuckoo_res) # 2 outliers
shapiro.test(cuckoo_res)
# retrieving residuals
cuckoo_res = cuckoo1$residuals
#checking normality
hist(cuckoo_res) # bell shape curve with no dramatic skew --> signs of normality
qqPlot(cuckoo_res) # 2 outliers
shapiro.test(cuckoo_res) # W = 0.9804, p-value = 0.07761
leveneTest(Egg.Length~Host.Species, cuckoo_egg)
# ANOVA table
summary(cuckoo1)
# Tukey-Kramer test for cuckoo
TukeyHSD(cuckoo1)
# Tukey-Kramer test for cuckoo
post_hoc_cuckoo <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
# Tukey-Kramer test for cuckoo
TukeyHSD(cuckoo1)
cld(cuckoo1)
install.packages("multcomp")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(car)
library(ggplot2)
library(multcomp)
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
summary(Post_hoc)
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
summary(Post_hoc)
confint(Post_hoc)
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
summary(Post_hoc)
# confint(Post_hoc)
cld(Post_hoc)
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
summary(Post_hoc)
# confint(Post_hoc)
cld(Post_hoc)
plot(Post_hoc, main = "Fig 1: 95% confidence level") # plotting post hoc test results
# Tukey-Kramer test for cuckoo
Post_hoc <- glht(cuckoo1, linfct = mcp(Host.Species = "Tukey"))
summary(Post_hoc)
# confint(Post_hoc)
cld(Post_hoc)
plot(Post_hoc, main = "Fig 1: 95% confidence level", cex.axis = 0.3) # plotting post hoc test results
# This script performs a power analysis for a one-way ANOVA with three groups
library(MASS)
####################################################################
## Constants that you can change to examine the power of your test##
####################################################################
PICKLEMEAN = 124 # in minutes
NOTHINGMEAN = 180 # in minutes
STD = 70 # in minutes
max.students = 50 # Max number of students in each group (balanced design)
students = c(2:max.students)
alpha = 0.05 # Type I Error rate
nsim = 100 # Number of simulations
# Making arrays to hold my simulation data
pvals = array(NA, dim=nsim)
power.vals = array(NA, dim=max.students - 1)
# Run the simulation
for (N in students){
for (i in 1:nsim){
# Randomly sample my three treatments
pickle = rnorm(N, PICKLEMEAN, STD)
nothing = rnorm(N, NOTHINGMEAN, STD)
water = rnorm(N, mean(PICKLEMEAN, NOTHINGMEAN), STD)
# Reformat the data to run an ANOVA
cure.time = c(pickle, nothing, water)
home.remedy = c(rep("pickle", N), rep("nothing", N), rep("water", N))
# Run an ANOVA and save p-values
fit = aov(cure.time ~ home.remedy)
pvals[i] = summary(fit)[[1]][["Pr(>F)"]][1]
}
power.vals[N - 1] = (sum(pvals < alpha)) / nsim
}
# Plot the simulation data
plot(students, power.vals, xlab="# students in each group",
ylab="power")
lo = loess(power.vals ~ students)
lines(predict(lo), col='red', lwd=2)
####################################################################
## Constants that you can change to examine the power of your test##
####################################################################
PICKLEMEAN = 124 # in minutes
NOTHINGMEAN = 180 # in minutes
STD = 90 # in minutes
max.students = 50 # Max number of students in each group (balanced design)
students = c(2:max.students)
alpha = 0.05 # Type I Error rate
nsim = 100 # Number of simulations
# Making arrays to hold my simulation data
pvals = array(NA, dim=nsim)
power.vals = array(NA, dim=max.students - 1)
# Run the simulation
for (N in students){
for (i in 1:nsim){
# Randomly sample my three treatments
pickle = rnorm(N, PICKLEMEAN, STD)
nothing = rnorm(N, NOTHINGMEAN, STD)
water = rnorm(N, mean(PICKLEMEAN, NOTHINGMEAN), STD)
# Reformat the data to run an ANOVA
cure.time = c(pickle, nothing, water)
home.remedy = c(rep("pickle", N), rep("nothing", N), rep("water", N))
# Run an ANOVA and save p-values
fit = aov(cure.time ~ home.remedy)
pvals[i] = summary(fit)[[1]][["Pr(>F)"]][1]
}
power.vals[N - 1] = (sum(pvals < alpha)) / nsim
}
# Plot the simulation data
plot(students, power.vals, xlab="# students in each group",
ylab="power")
lo = loess(power.vals ~ students)
lines(predict(lo), col='red', lwd=2)
####################################################################
## Constants that you can change to examine the power of your test##
####################################################################
PICKLEMEAN = 74 # in minutes
NOTHINGMEAN = 180 # in minutes
STD = 90 # in minutes
max.students = 50 # Max number of students in each group (balanced design)
students = c(2:max.students)
alpha = 0.05 # Type I Error rate
nsim = 100 # Number of simulations
# Making arrays to hold my simulation data
pvals = array(NA, dim=nsim)
power.vals = array(NA, dim=max.students - 1)
# Run the simulation
for (N in students){
for (i in 1:nsim){
# Randomly sample my three treatments
pickle = rnorm(N, PICKLEMEAN, STD)
nothing = rnorm(N, NOTHINGMEAN, STD)
water = rnorm(N, mean(PICKLEMEAN, NOTHINGMEAN), STD)
# Reformat the data to run an ANOVA
cure.time = c(pickle, nothing, water)
home.remedy = c(rep("pickle", N), rep("nothing", N), rep("water", N))
# Run an ANOVA and save p-values
fit = aov(cure.time ~ home.remedy)
pvals[i] = summary(fit)[[1]][["Pr(>F)"]][1]
}
power.vals[N - 1] = (sum(pvals < alpha)) / nsim
}
# Plot the simulation data
plot(students, power.vals, xlab="# students in each group",
ylab="power")
lo = loess(power.vals ~ students)
lines(predict(lo), col='red', lwd=2)
# plotting residual plot for cuckoo data\
cuckoo1 <- aov(Egg.Length~Host.Species, data = cuckoo_egg)
par(mfrow = c(2,2))
plot(cuckoo1)
# plotting residual plot for cuckoo data\
cuckoo1 <- aov(Egg.Length~Host.Species, data = cuckoo_egg)
par(mfrow = c(2,2))
plot(cuckoo1)
